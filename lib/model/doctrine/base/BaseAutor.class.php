<?php

/**
 * BaseAutor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property text $nombre
 * @property text $apellido
 * @property text $titulo
 * @property text $direccion
 * @property text $departamento
 * @property text $facultad
 * @property text $universidad
 * @property text $ciudad
 * @property text $pais
 * @property text $fono
 * @property text $fax
 * @property text $email
 * @property Doctrine_Collection $Publicaciones
 * @property Doctrine_Collection $Coautores
 * 
 * @method text                getNombre()        Returns the current record's "nombre" value
 * @method text                getApellido()      Returns the current record's "apellido" value
 * @method text                getTitulo()        Returns the current record's "titulo" value
 * @method text                getDireccion()     Returns the current record's "direccion" value
 * @method text                getDepartamento()  Returns the current record's "departamento" value
 * @method text                getFacultad()      Returns the current record's "facultad" value
 * @method text                getUniversidad()   Returns the current record's "universidad" value
 * @method text                getCiudad()        Returns the current record's "ciudad" value
 * @method text                getPais()          Returns the current record's "pais" value
 * @method text                getFono()          Returns the current record's "fono" value
 * @method text                getFax()           Returns the current record's "fax" value
 * @method text                getEmail()         Returns the current record's "email" value
 * @method Doctrine_Collection getPublicaciones() Returns the current record's "Publicaciones" collection
 * @method Doctrine_Collection getCoautores()     Returns the current record's "Coautores" collection
 * @method Autor               setNombre()        Sets the current record's "nombre" value
 * @method Autor               setApellido()      Sets the current record's "apellido" value
 * @method Autor               setTitulo()        Sets the current record's "titulo" value
 * @method Autor               setDireccion()     Sets the current record's "direccion" value
 * @method Autor               setDepartamento()  Sets the current record's "departamento" value
 * @method Autor               setFacultad()      Sets the current record's "facultad" value
 * @method Autor               setUniversidad()   Sets the current record's "universidad" value
 * @method Autor               setCiudad()        Sets the current record's "ciudad" value
 * @method Autor               setPais()          Sets the current record's "pais" value
 * @method Autor               setFono()          Sets the current record's "fono" value
 * @method Autor               setFax()           Sets the current record's "fax" value
 * @method Autor               setEmail()         Sets the current record's "email" value
 * @method Autor               setPublicaciones() Sets the current record's "Publicaciones" collection
 * @method Autor               setCoautores()     Sets the current record's "Coautores" collection
 * 
 * @package    pubudec
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAutor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('autor');
        $this->hasColumn('nombre', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('apellido', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('titulo', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('direccion', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('departamento', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('facultad', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('universidad', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('ciudad', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('pais', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('fono', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('fax', 'text', null, array(
             'type' => 'text',
             'notnull' => false,
             ));
        $this->hasColumn('email', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Publicacion as Publicaciones', array(
             'local' => 'id',
             'foreign' => 'autor_id'));

        $this->hasMany('PublicacionCoautor as Coautores', array(
             'local' => 'id',
             'foreign' => 'coautor_id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'nombre',
              1 => 'apellido',
             ),
             'unique' => true,
             ));
        $jcroppable0 = new Doctrine_Template_JCroppable(array(
             'images' => 
             array(
              0 => 'foto',
             ),
             ));
        $this->actAs($sluggable0);
        $this->actAs($jcroppable0);
    }
}